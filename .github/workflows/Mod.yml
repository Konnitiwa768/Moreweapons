# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: gitname: Build and Upload Mod

on:
  push:
    branches:
      - main  # 例えば、mainブランチにpushされた時に実行

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # リポジトリのコードをチェックアウト
    - name: Checkout code
      uses: actions/checkout@v2

    # JDKのセットアップ (Java 17を使用)
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adoptopenjdk'

    # Gradleをセットアップ (Gradle Wrapperが必要)
    - name: Set up Gradle
      uses: gradle/wrapper-validation-action@v1

    # Gradleを使ってビルド
    - name: Build with Gradle
      run: ./gradlew build

    # ビルドが成功した場合、アーティファクトをアップロード
    - name: Upload Mod JAR to GitHub Release
      if: success()
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # リポジトリのシークレットトークン
      with:
        files: build/libs/*.jar  # ビルドされたJARファイルをアップロード
